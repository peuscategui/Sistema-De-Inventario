// ESQUEMA OPTIMIZADO PROPUESTO PARA INVENTARIO EFC
// Este esquema elimina redundancias y mejora la estructura

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:postgres@192.168.40.129:5432/postgres"
}

// ===================================
// GESTIÓN DE USUARIOS Y PERMISOS
// ===================================

model User {
  id              Int              @id @default(autoincrement())
  username        String           @unique @db.VarChar(50)
  email           String           @unique @db.VarChar(100)
  password        String           @db.VarChar(255)
  fullName        String           @db.VarChar(100)
  cargo           String?          @db.VarChar(100)      // Migrado de empleado
  telefono        String?          @db.VarChar(20)       // Nuevo campo útil
  isActive        Boolean          @default(true)
  isAdmin         Boolean          @default(false)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  
  // Relaciones
  userPermissions UserPermission[]
  inventarios     Inventory[]      // Relación directa (elimina empleado)
  gerenciaId      Int?
  gerencia        Gerencia?        @relation(fields: [gerenciaId], references: [id])
  
  @@map("users")
}

model Resource {
  id          Int          @id @default(autoincrement())
  name        String       @unique @db.VarChar(50)
  displayName String       @db.VarChar(100)
  description String?      @db.VarChar(255)
  permissions Permission[]
  
  @@map("resources")
}

model Permission {
  id              Int              @id @default(autoincrement())
  action          String           @db.VarChar(50)
  resourceId      Int
  userPermissions UserPermission[]
  resource        Resource         @relation(fields: [resourceId], references: [id])

  @@unique([action, resourceId])
  @@map("permissions")
}

model UserPermission {
  id           Int        @id @default(autoincrement())
  userId       Int
  permissionId Int
  granted      Boolean    @default(true)
  createdAt    DateTime   @default(now())
  permission   Permission @relation(fields: [permissionId], references: [id])
  user         User       @relation(fields: [userId], references: [id])

  @@unique([userId, permissionId])
  @@map("user_permissions")
}

// ===================================
// GESTIÓN ORGANIZACIONAL
// ===================================

model Gerencia {
  id          Int       @id @default(autoincrement())
  nombre      String    @unique @db.VarChar(100)
  descripcion String?   @db.VarChar(255)
  codigo      String    @unique @db.VarChar(20)
  activo      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // Relaciones
  areas       Area[]
  licencias   Licencia[]
  usuarios    User[]    // Relación directa con usuarios
  
  @@map("gerencias")
}

model Area {
  id          Int       @id @default(autoincrement())
  nombre      String    @unique @db.VarChar(100)
  descripcion String?   @db.VarChar(255)
  codigo      String    @unique @db.VarChar(20)
  activo      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // Relaciones
  licencias   Licencia[]
  gerenciaId  Int
  gerencia    Gerencia  @relation(fields: [gerenciaId], references: [id])
  
  @@map("areas")
}

// ===================================
// GESTIÓN DE INVENTARIO
// ===================================

model Clasificacion {
  id               Int         @id @default(autoincrement())
  familia          String      @db.VarChar(100)
  subFamilia       String      @db.VarChar(100)
  tipoEquipo       String      @db.VarChar(100)
  vidaUtil         String      @db.VarChar(50)
  valorReposicion  Decimal?    @db.Decimal(10, 2)
  codigo           String?     @unique @db.VarChar(20)  // Nuevo: código único
  activo           Boolean     @default(true)           // Nuevo: para desactivar
  createdAt        DateTime    @default(now())          // Nuevo: auditoría
  updatedAt        DateTime    @updatedAt               // Nuevo: auditoría
  
  // Relaciones
  inventarios      Inventory[]
  
  @@index([familia, subFamilia])
  @@map("clasificaciones")
}

model Inventory {
  id                         Int            @id @default(autoincrement())
  
  // INFORMACIÓN ÚNICA DEL EQUIPO
  codigoEFC                  String?        @unique @db.VarChar(50)  // Hacer único
  marca                      String?        @db.VarChar(100)
  modelo                     String?        @db.VarChar(100)
  descripcion                String?        @db.Text
  serie                      String?        @db.VarChar(100)
  procesador                 String?        @db.VarChar(100)
  anio                         Int?
  ram                        String?        @db.VarChar(50)
  discoDuro                   String?        @db.VarChar(100)
  sistemaOperativo            String?        @db.VarChar(100)
  
  // ESTADO Y UBICACIÓN DEL EQUIPO
  status                     String?        @default("libre") @db.VarChar(20) // libre, asignado, mantenimiento, baja
  sedeActual                 String?        @db.VarChar(100)  // Sede donde está físicamente el equipo
  estado                     String?        @db.VarChar(50)   // Operativo, Averiado, etc.
  ubicacionEquipo            String?        @db.VarChar(200)  // Ubicación física específica
  condicion                  String?        @db.VarChar(50)   // Bueno, Regular, Malo
  
  // INFORMACIÓN ADMINISTRATIVA
  repotenciadas              Boolean?       @default(false)
  clasificacionObsolescencia String?        @db.VarChar(50)
  clasificacionRepotenciadas String?        @db.VarChar(50)
  motivoCompra               String?        @db.VarChar(200)
  
  // INFORMACIÓN FINANCIERA
  precioReposicion           Decimal?       @db.Decimal(10, 2)
  proveedor                  String?        @db.VarChar(200)
  factura                    String?        @db.VarChar(100)
  anioCompra                 Int?
  precioReposicion2024       Decimal?       @db.Decimal(10, 2)
  fecha_compra               DateTime?      @db.Date
  precioUnitarioSinIgv       Decimal?       @db.Decimal(10, 2)  // Cambiar a Decimal
  
  // OBSERVACIONES
  observaciones              String?        @db.Text
  
  // RELACIONES (solo estas, eliminando campos duplicados)
  clasificacionId            Int?
  empleadoId                 Int?           // Empleado asignado (opcional)
  
  // FECHAS DE AUDITORÍA
  createdAt                  DateTime       @default(now())
  updatedAt                  DateTime       @updatedAt
  
  // RELACIONES
  clasificacion              Clasificacion? @relation(fields: [clasificacionId], references: [id])
  empleado                   User?            @relation(fields: [empleadoId], references: [id])
  
  // ÍNDICES PARA MEJORAR PERFORMANCE
  @@index([status])
  @@index([sedeActual])
  @@index([clasificacionId])
  @@index([empleadoId])
  @@index([codigoEFC])
  @@map("inventarios")
}

// ===================================
// GESTIÓN DE LICENCIAS
// ===================================

model Licencia {
  id                 Int              @id @default(autoincrement())
  codigoLicencia     String           @unique @db.VarChar(50)
  nombre             String           @db.VarChar(200)
  tipoLicencia       TipoLicencia
  proveedor          String           @db.VarChar(100)
  fechaCompra        DateTime         @db.Date
  fechaVencimiento   DateTime?        @db.Date
  costo              Decimal          @db.Decimal(10, 2)
  moneda             String           @default("USD") @db.VarChar(3)
  cantidadUsuarios   Int              @default(1)
  estado             EstadoLicencia   @default(ACTIVA)
  asignadoA          String?          @db.VarChar(200)
  descripcion        String?          @db.Text
  documentos         String[]         // URLs de documentos
  observaciones      String?          @db.Text
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  
  // Relaciones
  areaId             Int?
  area               Area?            @relation(fields: [areaId], references: [id])
  gerenciaId         Int?
  gerencia           Gerencia?        @relation(fields: [gerenciaId], references: [id])
  
  @@index([estado])
  @@index([fechaVencimiento])
  @@index([tipoLicencia])
  @@map("licencias")
}

// ===================================
// ENUMS OPTIMIZADOS
// ===================================

enum EstadoInventario {
  LIBRE
  ASIGNADO
  EN_REPARACION
  OBSOLETO
  DADO_DE_BAJA
}

enum CondicionEquipo {
  EXCELENTE
  BUENO
  REGULAR
  MALO
  INSERVIBLE
}

enum TipoLicencia {
  SOFTWARE
  HARDWARE
  SERVICIO
  SUBSCRIPCION
}

enum EstadoLicencia {
  ACTIVA
  VENCIDA
  POR_VENCER
  SUSPENDIDA
  CANCELADA
} 