const { Client } = require('pg');

async function verificarEstadoValores() {
    const client = new Client({
        user: 'postgres',
        host: '192.168.40.129',
        database: 'postgres',
        password: 'postgres',
        port: 5432,
    });

    try {
        await client.connect();
        console.log('üîå Conectando a la base de datos...');

        // Verificar valores √∫nicos de estado
        console.log('üîç Valores √∫nicos de estado...');
        const valoresUnicos = await client.query(`
            SELECT DISTINCT estado, COUNT(*) as count
            FROM inventory
            WHERE estado IS NOT NULL
            GROUP BY estado
            ORDER BY count DESC
        `);

        console.log(`üìä Valores √∫nicos de estado:`);
        valoresUnicos.rows.forEach((item, index) => {
            console.log(`   ${index + 1}. "${item.estado}" (${item.count} registros)`);
        });

        // Tambi√©n verificar algunos registros espec√≠ficos
        console.log('\nüîç Verificando algunos registros espec√≠ficos...');
        const registrosResult = await client.query(`
            SELECT 
                "codigoEFC",
                estado,
                "ubicacionEquipo",
                condicion
            FROM inventory
            ORDER BY id
            LIMIT 10
        `);

        console.log(`üìä Primeros 10 registros:`);
        registrosResult.rows.forEach((item, index) => {
            console.log(`   ${index + 1}. ${item.codigoEFC} - Estado: "${item.estado}" - Ubicaci√≥n: "${item.ubicacionEquipo}" - Condici√≥n: "${item.condicion}"`);
        });

    } catch (error) {
        console.error('‚ùå Error:', error);
    } finally {
        await client.end();
        console.log('üîå Conexi√≥n cerrada');
    }
}

verificarEstadoValores();
